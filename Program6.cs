using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SortLab
{
    class Program
    {

        static void Main()
        {
            Sort();//использование рекурсивной функции
        }

        /*Основная программа*/
        static void Sort()//обьявление рекурсивной функции
        {

            int[] myint = {//обьявление и заполнение массива
                99,
                88,
                77,
                66,
                55,
                44,
                33,
                22,
                11,
                8,
                5,
                3,
                1
            };

            WriteArray(myint);//использование рекурсивной функции
            ShakerSort(myint);//использование рекурсивной функции
            WriteArray(myint);//использование рекурсивной функции

            Console.ReadLine();//ожидание нажатия клавиши

        }
        /* Шейкер-сортировка */
        static void ShakerSort(int[] myint)//обьявление рекурсивной функции
        {
            int beg,
            end;//обьявление переменных
            int count = 0;//обьявление и присвоение значения переменной

            for (int i = 0; i < myint.Length / 2; i++) //можно переберать за кол-во итераций, в 2 раза меньше
            { //целочисленное деление округляет в меньшую сторону
              //условный оператор, выполняется пока i < myint.Length / 2
                beg = 0;//присвоение значения переменной
                end = myint.Length - 1;//присвоение значения переменной

                do//условный оператор, выполняет оператор, пока определенное логическое выражение равно значению true
                {
                    count += 2;//увеличение значения переменной на два
                    /* идем спереди */
                    if (myint[beg] > myint[beg + 1]) Swap(myint, beg, beg + 1);//условный оператор, выполняется если myint[beg] > myint[beg + 1]) Swap(myint, beg, beg + 1
                    beg++; //сдвигаем позицию вперед
                    //увеличение значения переменной на единицу

                    /* идем сзади */
                    if (myint[end - 1] > myint[end]) Swap(myint, end - 1, end);//условный оператор, выполняется если myint[end - 1] > myint[end]) Swap(myint, end - 1, end
                    end--; //сдвигаем позицию назад
                    //уменьшение значения переменной на единицу
                }
                while (beg <= end); // условия усреднения
                //проверка логического выражения
            }
            Console.Write("\nКоличество сравнений = {0}\n", count);//вывод на экран сообщения пользователю
        }

        /* Поменять элементы местами */
        static void Swap(int[] myint, int i, int j)//обьявление рекурсивной функции
        {
            int glass;//обьявление переменной
            glass = myint[i];//присвоение значения переменной
            myint[i] = myint[j];//присвоение значения элемента массива
            myint[j] = glass;//присвоение значения элемента массива
        }

        /*Вывести массив*/
        static void WriteArray(int[] a)//обьявление рекурсивной функции
        {
            foreach (int i in a)//оператор перебора элементов массива
                Console.Write("{0}|", i);//вывод на экран сообщения пользователю
            Console.WriteLine("\n\n\n");//пропуск трёх трок
        }
    }
}
