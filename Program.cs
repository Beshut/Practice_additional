using System;
class Program
{
    static void Main(string[] args)
    {
        double x = 0, y = 0, z = 0, w = 0;//обьявление переменных и присвоение значения "0"
        Console.WriteLine("Введите значение х:");//вывод на экран сообщения пользователю

        try//оператор, выполняется если не возникает ошибки в фрагменте программы
        {
            x = Convert.ToDouble(Console.ReadLine());//присвоение значения переменной пользователем и перевод в тип double
            y = Math.Sqrt((x + 3) / (x - 3));//выполнение математических операций, нахождение квадратного корня
        }
        catch (Exception e)//оператор, выполняется при возникновении ошибки и присваивает переменной "e"
        {
            Console.WriteLine(e.Message);//вывод на экран сообщения пользователю
        }

        Console.WriteLine("Введите значение z:");//вывод на экран сообщения пользователю
        z = Convert.ToDouble(Console.ReadLine());//присвоение значения переменной пользователем и перевод в тип double

        Console.WriteLine("Введите значение w:");//вывод на экран сообщения пользователю
        w = Convert.ToDouble(Console.ReadLine());//присвоение значения переменной пользователем и перевод в тип double

        Console.WriteLine("Результат Sqrt: {0}", y);//вывод на экран сообщения пользователю

        y = Math.Abs(x);//нахождение модуля числа

        Console.WriteLine("Результат Abs: {0}", y);//вывод на экран сообщения пользователю

        y = Math.Acos(x);//возвращает угол, косинус которого равен "х"

        Console.WriteLine("Результат Acos: {0}", y);//вывод на экран сообщения пользователю

        y = Math.Acosh(x);//возвращает угол, гиперболический косинус которого равен "х"

        Console.WriteLine("Результат Acosh: {0}", y);//вывод на экран сообщения пользователю

        y = Math.Asin(x);//возвращает угол, синус которого равен "х"

        Console.WriteLine("Результат Asin: {0}", y);//вывод на экран сообщения пользователю

        y = Math.Asinh(x);//возвращает угол, гиперболический синус которого равен "х"

        Console.WriteLine("Результат Asinh: {0}", y);//вывод на экран сообщения пользователю

        y = Math.Atan(x);//возвращает угол, тангенс которого равен "х"

        Console.WriteLine("Результат Atan: {0}", y);//вывод на экран сообщения пользователю


        y = Math.Atan2(x, z);//возвращает угол, тангенс которого равен отношению двух чисел

        Console.WriteLine("Результат Atan2: {0} ({1}, {2})", y, x, z);//вывод на экран сообщения пользователю

        y = Math.Atanh(x);//возвращает угол, гиперболический тангенс которого равен "х"

        Console.WriteLine("Результат Atanh: {0}", y);//вывод на экран сообщения пользователю

        long t = 0;//обьявление переменной и присваивание значения "0"
        t = Math.BigMul((int)x, (int)z);//умножает два 32 - битовых числа

        Console.WriteLine("Результат BigMul: {0} ({1} {2})", t, (int)x, (int)z);//вывод на экран сообщения пользователю

        y = Math.BitDecrement(x);//возвращает ближайшее самое маленькое значение, которое меньше, чем "х"

        Console.WriteLine("Результат BitDecrement: {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.BitIncrement(x);//возвращает ближайшее самое большое значение, превышающее "х"

        Console.WriteLine("Результат BitIncrement: {0} ({1})", y, x);//вывод на экран сообщения пользователю


        y = Math.Cbrt(x);//возвращает кубический корень

        Console.WriteLine("Результат Cbrt: {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.Ceiling(x);//возвращает наименьшее целое число, которое больше или равно "х"

        Console.WriteLine("Результат Ceiling: {0} ({1})", y, x);//вывод на экран сообщения пользователю

        byte b = 0;//обьявление переменной и присваивание значения "0"
        b = Math.Clamp((byte)x, (byte)z, (byte)w);//возвращает b, ограниченное диапазоном от min до max включительно

        Console.WriteLine("Результат Clamp: {0} ({1} {2} {3})", b, (byte)x, (byte)z, (byte)w);//вывод на экран сообщения пользователю

        y = Math.CopySign(x, z);//возвращает значение с величиной "x" и знаком "z"

        Console.WriteLine("Результат CopySign: {0} ({1} {2})", y, x, z);//вывод на экран сообщения пользователю


        y = Math.Cos(x);//нахождение косинуса числа

        Console.WriteLine("Результат Cos: {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.Cosh(x);//нахождение гиперболического косинуса числа

        Console.WriteLine("Результат Cosh {0} ({1})", y, x);//вывод на экран сообщения пользователю

        int output = 0;//обьявление переменной и присваивание значения "0"

        y = Math.DivRem((int)x, (int)z, out output);//вычисляет частное двух 32 - разрядных знаковых целых чисел и возвращает остаток в выходном параметре

        Console.WriteLine("Результат DivRem {0} ({1} {2}) result = {3}", y, x, z, output);//вывод на экран сообщения пользователю


        y = Math.E;//число Эйлера

        Console.WriteLine("Результат E {0}", y);//вывод на экран сообщения пользователю

        y = Math.Exp(x);//возвращает e, возведенное в указанную степень

        Console.WriteLine("Результат Exp {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.Floor(x);//возвращает наибольшее целое число, которое меньше или равно "х"

        Console.WriteLine("Результат Exp {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.FusedMultiplyAdd(x, z, w);//возвращает значение (x * z) + w, округленное в рамках одной тернарной операции

        Console.WriteLine("Результат FusedMultiplyAdd(x*z+w) {0} ({1} {2} {3} )", y, x, z, w);//вывод на экран сообщения пользователю

        y = Math.IEEERemainder(x, z);//возвращает остаток от деления одного на другое число

        Console.WriteLine("Результат IEEERemainder {0} ({1} {2})", y, x, z);//вывод на экран сообщения пользователю

        y = Math.ILogB(x);//возвращает целочисленный логарифм с основанием 2

        Console.WriteLine("Результат ILogB {0} ({1})", y, x);//вывод на экран сообщения пользователю


        y = Math.Log(x);//возвращает натуральный логарифм(с основанием e)

        Console.WriteLine("Результат Log {0} ({1})", y, x);//вывод на экран сообщения пользователю


        y = Math.Log10(x);//возвращает логарифм с основанием 10

        Console.WriteLine("Результат Log10 {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.Log2(x);//возвращает логарифм с основанием 2

        Console.WriteLine("Результат Log2 {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.Max(x, z);//возвращает большее из двух чисел двойной точности с плавающей запятой

        Console.WriteLine("Результат Max {0} ({1} {2})", y, x, z);//вывод на экран сообщения пользователю

        y = Math.MaxMagnitude(x, z);//возвращает большую величину из двух чисел двойной точности с плавающей запятой

        Console.WriteLine("Результат MaxMagnitude {0} ({1} {2})", y, x, z);//вывод на экран сообщения пользователю

        y = Math.Min(x, z);//возвращает меньшее из двух чисел двойной точности с плавающей запятой

        Console.WriteLine("Результат Min {0} ({1} {2})", y, x, z);//вывод на экран сообщения пользователю

        y = Math.MinMagnitude(x, z);//возвращает меньшую величину из двух чисел двойной точности с плавающей запятой

        Console.WriteLine("Результат MinMagnitude {0} ({1} {2})", y, x, z);//вывод на экран сообщения пользователю

        y = Math.PI;//число Пи

        Console.WriteLine("Результат PI {0} ", y);//вывод на экран сообщения пользователю

        y = Math.Pow(x, z);//возведение числа "х" в степень "z"

        Console.WriteLine("Результат Pow {0} ({1} {2})", y, x, z);//вывод на экран сообщения пользователю

        y = Math.ReciprocalEstimate(x);//возвращает оценку обратной величины указанного числа

        Console.WriteLine("Результат ReciprocalEstimate {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.ReciprocalSqrtEstimate(x);//возвращает оценку обратного квадратного корня указанного числа

        Console.WriteLine("Результат ReciprocalSqrtEstimate {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.Round(x);//округляет десятичное значение до ближайшего целого значения

        Console.WriteLine("Результат Round {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.ScaleB(x, (int)z);//возвращает значение x * 2 ^ z, вычисленное эффективно

        Console.WriteLine("Результат ScaleB (x*2^z) {0} ({1} {2})", y, x, (int)z);//вывод на экран сообщения пользователю


        y = Math.Sign(x);//возвращает целое число, обозначающее знак числа двойной точности с плавающей запятой

        Console.WriteLine("Результат Sign {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.Sin(x);//нахождение синуса числа

        Console.WriteLine("Результат Sin {0} ({1})", y, x);//вывод на экран сообщения пользователю

        var d = Math.SinCos(x);//возвращает синус и косину числа

        Console.WriteLine("Результат SinCos {0} ({1})", y, d.ToString());//вывод на экран сообщения пользователю


        y = Math.Sinh(x);//нахождение гиперболического синуса числа

        Console.WriteLine("Результат Sinh {0} ({1})", y, x);//вывод на экран сообщения пользователю

        y = Math.Tan(x);//нахождение тангенса числа

        Console.WriteLine("Результат Tan {0} ({1})", y, x);//вывод на экран сообщения пользователю


        y = Math.Tanh(x);//нахождение гиперболического тангенса числа

        Console.WriteLine("Результат Tanh {0} ({1})", y, x);//вывод на экран сообщения пользователю


        y = Math.Tau;//представляет число радианов в полном обороте, заданное константой τ

        Console.WriteLine("Результат Tau {0}", y);//вывод на экран сообщения пользователю


        y = Math.Truncate(x);//вычисляет целую часть заданного числа двойной точности с плавающей запятой

        Console.WriteLine("Результат Truncate {0} ({1})", y, x);//вывод на экран сообщения пользователю
    }
}
